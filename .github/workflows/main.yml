name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - sprint*
  pull_request:
    branches:
      - main
      - sprint*
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          node-version: 20
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key:
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Install dependencies
        run: npm ci
        # Test each secret individually
      - name: Check DATABASE_URL
        run: |
          if [ -z "${{ secrets.DATABASE_URL }}" ]; then
            echo "DATABASE_URL is not set or empty."
          else
            echo "DATABASE_URL is set."
          fi

      - name: Check NEXTAUTH_SECRET
        run: |
          if [ -z "${{ secrets.NEXTAUTH_SECRET }}" ]; then
            echo "NEXTAUTH_SECRET is not set or empty."
          else
            echo "NEXTAUTH_SECRET is set."
          fi

      - name: Check NEXTAUTH_URL
        run: |
          if [ -z "${{ secrets.NEXTAUTH_URL }}" ]; then
            echo "NEXTAUTH_URL is not set or empty."
          else
            echo "NEXTAUTH_URL is set."
          fi

      - name: Check PUBLIC_API_URL
        run: |
          if [ -z "${{ secrets.PUBLIC_API_URL }}" ]; then
            echo "PUBLIC_API_URL is not set or empty."
          else
            echo "PUBLIC_API_URL is set."
          fi
          
      - name: Build the application
        env:
          database_url: ${{ secrets.DATABASE_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          PUBLIC_API_URL: ${{ secrets.PUBLIC_API_URL }}
        run: npm run build
